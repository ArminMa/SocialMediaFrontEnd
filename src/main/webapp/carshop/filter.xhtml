<ui:composition  
    xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:ng="http://xmlns.jcp.org/jsf/passthrough">

	<div style="width: 700px">
		<br />
		<br />
	
		<ngsync value="{{staticOptionBean.brands}}"   direction="serverToClient" once="true" />
		<ngsync value="{{staticOptionBean.colors}}"   direction="serverToClient" once="true" />
		<ngsync value="{{dynamicOptionBean.types}}"   direction="serverToClient" cacheable="true" />
		<ngsync value="{{staticOptionBean.prices}}"   direction="serverToClient" once="true" />
		<ngsync value="{{staticOptionBean.mileages}}" direction="serverToClient" once="true" />
		<ngsync value="{{staticOptionBean.fuels}}"    direction="serverToClient" once="true" />
		<ngsync value="{{staticOptionBean.years}}"    direction="serverToClient" once="true" />
		
		<!-- ngsync doesn't transport the entire bean recursively, so we have to list each attributes we want to send -->
		<!-- will be fixed in a future AngularFaces version -->
		<ngsync value="{{filterBean.type}}"     direction="serverToClient" cacheable="true" />
		<ngsync value="{{filterBean.brand}}"    direction="serverToClient" cacheable="true"/>
		<ngsync value="{{filterBean.counter}}"  direction="serverToClient" cacheable="true" />
		<ngsync value="{{filterBean.price}}"    direction="serverToClient" cacheable="true"/>
		<ngsync value="{{filterBean.mileage}}"  direction="serverToClient" cacheable="true"/>
		<ngsync value="{{filterBean.fuel}}"     direction="serverToClient" cacheable="true"/>
		<ngsync value="{{filterBean.color}}"    direction="serverToClient" cacheable="true"/>
		<ngsync value="{{filterBean.yearText}}" direction="serverToClient" cacheable="true"/>
		<!-- end of ngsync workaround -->
		
		<ngsync value="{{filterBean}}" direction="clientToServer" id="filterSyncID" />
		<ngsync value="{{settingsBean}}" direction="clientToServer" id="settingsID" />
		
		<div class="carFilterBox"> 
			<div style="font-weight:bold;font-size:125%">What kind of car are you looking for?
			</div> 
			<div>
				<table style="border-spacing:10px">
					<tr>
						<td width="150px">Brand</td>
						<td width="110px">Type</td>
						<td width="100px">Price</td>
					</tr>
					<tr>
						<td>
							<select id="filterbrand" ng-model="filterBean.brand" ng-options="brand for brand in staticOptionBean.brands track by brand"
                                    ng-change="filterBean.type=''">
     								<option value="">-- choose brand --</option>
							</select>
						</td>
						<td>
						    <select ng-model="filterBean.type" ng-options="type for type in dynamicOptionBean.types track by type">
     								<option value="">-- choose type --</option>
							</select>
						</td>
						<td>
						    <select ng-model="filterBean.price" ng-options="price for price in staticOptionBean.prices track by price">
     								<option value="">-- choose price --</option>
							</select>
						</td>
					</tr>
					<tr>
						<td style="padding-top:15px">Mileage</td>
						<td style="padding-top:15px">Fuel</td>
						<td style="padding-top:15px">Color</td>
					</tr>
					<tr>
						<td>
						    <select ng-model="filterBean.mileage" ng-options="mileage for mileage in staticOptionBean.mileages track by mileage">
     								<option value="">-- choose mileage --</option>
							</select>
						</td>
						<td>
						    <select ng-model="filterBean.fuel" ng-options="fuel for fuel in staticOptionBean.fuels track by fuel">
     								<option value="">-- choose fuel --</option>
							</select>
						</td>
						<td>   
							<select ng-model="filterBean.color" ng-options="color for color in staticOptionBean.colors track by color">
     								<option value="">-- choose color --</option>
   							</select>
   						</td>
					</tr>
					<tr>
						<td style="padding-top:15px">year</td>
					</tr>
					<tr>
						<td>
							<select ng-model="filterBean.yearText" ng-options="year for year in staticOptionBean.years track by year">
     								<option value="">-- choose year --</option>
   							</select>
						</td>
						<td>
							<button ng-show="activateAJAXButton()" class="carFilterButton" jsf:action="index.jsf">update counter
								<f:ajax render="angular" execute="filterSyncID settingsID"></f:ajax>
							</button>
						</td>
						<td >
							<button id="listCarsID" class="carFilterButton" jsf:outcome="table.jsf" >{{filterBean.counter}} cars</button>
						</td>
					</tr>
				</table>
			</div>
		</div>
	</div>
</ui:composition>	   		